{"version":3,"file":"logger.js","names":["_util","require","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","a","n","TypeError","_defineProperties","key","_createClass","i","_toPrimitive","toPrimitive","call","String","Number","os","_require","isNull","isObject","graylog2","Sentry","Graylog","graylog","logger","exports","Logger","settings","level","process","env","LOG_LEVEL","host","LOG_HOST","port","LOG_PORT","saveLocal","isTrue","LOG_LOCAL","timestampLocal","LOG_TIMESTAMP","verboseLocal","LOG_EXTRA","color","LOG_COLOR","prettyPrint","LOG_PRETTY","developer_mode","isProductionEnv","slackHook","LOG_SLACK_HOOK","graylogger","logLevels","defaultSender","critical","msg","extra","sender","loggerPassToConsole","error","warn","info","debug","trace","type","logToConsole","defaultLogger","get","colors","Reset","Bright","Dim","Underscore","Blink","Reverse","Hidden","FgBlack","FgRed","FgGreen","FgYellow","FgBlue","FgLightBlue","FgMagenta","FgCyan","FgWhite","BgBlack","BgRed","BgGreen","BgYellow","BgBlue","BgMagenta","BgCyan","BgWhite","colorconf","timestamp","TRACE","DEBUG","INFO","WARN","ERROR","CRITICAL","objToString","obj","str","JSON","stringify","err","colorize","part","initGraylog","server1","options","servers","hostname","on","console","log","checkType","indexOf","join","logThis","toUpperCase","logLocal","msgShort","msgLong","extras","Date","toJSON","_extras","getSentryExtras","assign","smallExtras","user_id","filename","msgLongGray","substring","activeSpan","getActiveSpan","rootSpan","getRootSpan","undefined","sentryTraceId","spanToTraceHeader","sentryBaggageId","spanToBaggageHeader","sentryBaggage"],"sources":["../src/logger.js"],"sourcesContent":["const os = require(\"os\");\nconst { isNull, isObject } = require(\"lodash\");\nconst graylog2 = require(\"graylog2\");\nconst Sentry = require(\"@sentry/node\");\n\nconst Graylog = graylog2.graylog;\n\nimport { isTrue, isProductionEnv } from \"./util\";\n\nconst logger = {\n  settings: {\n    level: process.env.LOG_LEVEL || \"DEBUG\",\n    host: process.env.LOG_HOST || \"127.0.0.1\",\n    port: process.env.LOG_PORT || 54321,\n    saveLocal: isTrue(process.env.LOG_LOCAL),\n    timestampLocal: isTrue(process.env.LOG_TIMESTAMP),\n    verboseLocal: isTrue(process.env.LOG_EXTRA),\n    color: isTrue(process.env.LOG_COLOR),\n    prettyPrint: isTrue(process.env.LOG_PRETTY),\n    developer_mode: !isProductionEnv(),\n    // defaultSender:  undefined,\n    slackHook: process.env.LOG_SLACK_HOOK || null,\n  },\n  graylogger: null,\n};\n\n// order is important! (severe ==> verbose)\nconst logLevels = [\"CRITICAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"];\n\n//to enable logger instances have a default sender - shit's mainly singletonic otherwise\nclass Logger {\n  constructor(defaultSender) {\n    this.defaultSender = defaultSender;\n  }\n\n  critical(msg, extra, sender) {\n    this.loggerPassToConsole(\"CRITICAL\", sender, msg, extra);\n  }\n  error(msg, extra, sender) {\n    this.loggerPassToConsole(\"ERROR\", sender, msg, extra);\n  }\n  warn(msg, extra, sender) {\n    this.loggerPassToConsole(\"WARN\", sender, msg, extra);\n  }\n  info(msg, extra, sender) {\n    this.loggerPassToConsole(\"INFO\", sender, msg, extra);\n  }\n  debug(msg, extra, sender) {\n    this.loggerPassToConsole(\"DEBUG\", sender, msg, extra);\n  }\n  trace(msg, extra, sender) {\n    this.loggerPassToConsole(\"TRACE\", sender, msg, extra);\n  }\n\n  loggerPassToConsole(type, sender, msg, extra) {\n    sender =\n      sender ||\n      this.defaultSender ||\n      logger.settings.defaultSender ||\n      \"unknown sender\";\n    logToConsole(type, sender, msg, extra);\n  }\n}\nconst defaultLogger = new Logger();\n\nlogger.for = (sender) => {\n  return new Logger(sender);\n};\nlogger.get = () => {\n  return defaultLogger;\n};\n\nconst colors = {\n  Reset: \"\\x1b[0m\",\n  Bright: \"\\x1b[1m\",\n  Dim: \"\\x1b[2m\",\n  Underscore: \"\\x1b[4m\",\n  Blink: \"\\x1b[5m\",\n  Reverse: \"\\x1b[7m\",\n  Hidden: \"\\x1b[8m\",\n\n  FgBlack: \"\\x1b[30m\",\n  FgRed: \"\\x1b[31m\",\n  FgGreen: \"\\x1b[32m\",\n  FgYellow: \"\\x1b[33m\",\n  FgBlue: \"\\x1b[34m\",\n  FgLightBlue: \"\\x1b[1;34m\",\n  FgMagenta: \"\\x1b[35m\",\n  FgCyan: \"\\x1b[36m\",\n  FgWhite: \"\\x1b[37m\",\n\n  BgBlack: \"\\x1b[40m\",\n  BgRed: \"\\x1b[41m\",\n  BgGreen: \"\\x1b[42m\",\n  BgYellow: \"\\x1b[43m\",\n  BgBlue: \"\\x1b[44m\",\n  BgMagenta: \"\\x1b[45m\",\n  BgCyan: \"\\x1b[46m\",\n  BgWhite: \"\\x1b[47m\",\n};\n\nconst colorconf = {\n  timestamp: colors.Dim + colors.FgBlack + colors.BgWhite,\n  level: {\n    TRACE: colors.Dim + colors.BgMagenta + colors.FgBlack,\n    DEBUG: colors.Dim + colors.FgBlack + colors.BgGreen,\n    INFO: colors.FgBlue + colors.BgCyan,\n    WARN: colors.Bright + colors.FgYellow + colors.BgBlack + \" ⚠️ \",\n    ERROR: colors.Bright + colors.FgRed + colors.BgBlack + \" ❌\",\n    CRITICAL:\n      colors.Bright + colors.BgRed + colors.FgYellow + colors.Blink + \" ☠️ \",\n  },\n  sender: colors.Underscore + colors.FgCyan,\n  extra: colors.FgWhite + colors.BgBlue,\n};\nfunction objToString(obj) {\n  let str;\n  try {\n    if (!logger.settings.prettyPrint) {\n      str = JSON.stringify(obj);\n    } else {\n      str = JSON.stringify(obj, null, 4);\n    }\n  } catch (err) {\n    logToConsole(\n      \"WARN\",\n      \"logger-module\",\n      \"stringification of object failed\",\n      err,\n    );\n    str = \"~(Obj)~[un-stringifiable]~~\";\n  }\n  return str;\n}\nfunction colorize(part, str) {\n  if (!logger.settings.color) return str;\n  if (part === \"level\")\n    return colorconf.level[str] + \" \" + str + \" \" + colors.Reset;\n  return colorconf[part] + str + colors.Reset;\n}\n\n// initialize the remote logger\nlogger.initGraylog = function () {\n  let server1 = {\n    host: logger.settings.host,\n    port: logger.settings.port,\n  };\n  let options = {\n    servers: [],\n    hostname: os.hostname(),\n  };\n  options.servers.push(server1);\n\n  let graylogger = new Graylog(options);\n\n  /* istanbul ignore next */\n  graylogger.on(\"error\", function (error) {\n    console.log(\" 👾 !ERROR! while trying to write to graylog2:\", error);\n  });\n  logger.graylogger = graylogger;\n  logToConsole(\n    \"INFO\",\n    \"logger.initGraylog\",\n    \"Connection to Graylog log Server initialized\",\n    options,\n  );\n  //if (logger.settings.verboseLocal) console.log(logger)\n};\n\nfunction checkType(type) {\n  if (logLevels.indexOf(type) !== -1) return true;\n  console.log('unknown logging type: \"' + type + '\"');\n  console.log(\"known logging types are: \" + logLevels.join(\",\"));\n  return false;\n}\n\nfunction logThis(type) {\n  return (\n    logLevels.indexOf(logger.settings.level.toUpperCase()) >=\n    logLevels.indexOf(type)\n  );\n}\n\nfunction logLocal(type, sender, msgShort, msgLong, extras) {\n  type = type.toUpperCase();\n  let msg =\n    (logger.settings.color ? colors.Reset : \"\") +\n    (logger.settings.timestampLocal\n      ? colorize(\"timestamp\", new Date().toJSON()) + \" \"\n      : \"\") +\n    colorize(\"level\", type) +\n    \"<\" +\n    colorize(\"sender\", sender) +\n    \">: \";\n  // msg += msgLong ? msgLong : msgShort // nope, msgLong will usually be == extras\n  msg += msgShort;\n  //if (['ERROR', 'WARN'].indexOf(type) !== -1) console.error(msg)\n  //else\n  console.log(msg);\n  if (logger.settings.verboseLocal && isObject(extras)) {\n    console.log(colorize(\"extra\", \"↳extras:\"), extras);\n  }\n}\n\n/**\n * logs to console with timestamp\n * @param  {String} type type of message\n * @param  {String} sender sender of the message\n * @param  {String} msgShort short msg\n * @param  {Object} [extras] some extras e.g. job id\n */\nfunction logToConsole(type, sender, msgShort, _extras) {\n  type = type.toUpperCase();\n  if (isNull(msgShort)) return;\n  if (!checkType(type)) return;\n  if (!logThis(type)) return;\n\n  let extras = {\n    ...getSentryExtras(),\n  };\n  if (_extras) extras = Object.assign({}, _extras);\n\n  if (isObject(msgShort)) msgShort = objToString(msgShort);\n\n  // sender = sender.toUpperCase()\n\n  let msgLong = extras.msgLong || _extras;\n  if (isObject(msgLong)) msgLong = objToString(msgLong);\n  // in production mode send the message to graylog as well.\n  if (!logger.settings.developer_mode) {\n    if (logger.graylogger === null) logger.initGraylog();\n\n    // smallExtras added because just sending the extras json can lead to trouble with indexing on the graylog server if it's not consistent\n    let smallExtras = {\n      sender: sender,\n      type: type,\n    };\n    if (extras.user_id) smallExtras.user_id = extras.user_id;\n    if (extras.filename) smallExtras.filename = extras.filename;\n\n    // limit size of msgLong to avoid excessive storage consumtion and failures\n    // (up to 32766 byte strings should be possible, but 10k characters is already plenty for reasonable logging output)\n    const msgLongGray =\n      typeof msgLong === \"string\" ? msgLong.substring(0, 10000) : null;\n\n    try {\n      logger.graylogger.log(msgShort, msgLongGray, smallExtras);\n    } catch (e) {\n      logLocal(\n        \"error\",\n        \"logger\",\n        \"trying to log something illegal? msgShort: \" +\n          msgShort +\n          \" msgLong: \" +\n          msgLong +\n          \" extras: \" +\n          extras +\n          \" orig msg: \" +\n          e,\n        false,\n        { extras: extras, error: e },\n      );\n    }\n  }\n\n  if (logger.settings.developer_mode || logger.settings.saveLocal) {\n    logLocal(type, sender, msgShort, msgLong, _extras);\n  }\n}\n\nfunction getSentryExtras() {\n  const activeSpan = Sentry.getActiveSpan();\n  const rootSpan = activeSpan ? Sentry.getRootSpan(activeSpan) : undefined;\n  const sentryTraceId = rootSpan\n    ? Sentry.spanToTraceHeader(rootSpan)\n    : undefined;\n\n  const sentryBaggageId = rootSpan\n    ? Sentry.spanToBaggageHeader(rootSpan)\n    : undefined;\n\n  return {\n    trace: sentryTraceId,\n    sentryBaggage: sentryBaggageId,\n  };\n}\n\nexport { logToConsole, logger as Logger };\n"],"mappings":"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","ignoreList":[]}